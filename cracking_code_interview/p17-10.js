/*
다수 원소. 개수가 절반 이상인 원소.
요소가 굳이 양의 정수로 이루어져 있다 가정.

시간은 O(N), O(1)공간 안에서 찾을 수 있는 알고리즘?

가장 단순한건 뭔가? 원소별 출현 횟수를 새서, 가장 많은 것이 Math.ceil(n/2) 보다 같거나 큰지 확인.

O(1) 공간만 써야 하니깐, 각 원소별로 전체 순환을 하면서 갯수를 새면 된다.

=> O(N^2)


다른 방법은? 정렬 후에, 중앙값의 등장 횟수를 새면 된다.

전체 길이가 홀수 일 때 다수 원소는 반드시 중앙에 등장하기 때문에 이걸 보면 되고,
짝수일 때는 중앙 앞,뒤 두 글자를 보면 된다.

=> 그런데 전체 정렬을 하려면 O(N log N)이 든다.



정렬을 안하고 중앙값을 알려면? 공간은 O(1)만 써야 하고.

모두 양의 정수라는 사실을 알 때, 다음 값을 구해서 알고 있으면 도움이 되나?
- min, max, sum

전체 평균에 가장 근접한 2개만 봐도 충분한가?

1 1 1 100 200 100000

이렇게 하면 100과 200만 살펴 볼 수 있을 것 같은데.



전체 값을 합을 구한 다음에 각 원소에 대해서

t * (len / 2) <= sum 일 때만 갯수를 검사? 정렬된 array가 아니라서 다 봐야 한다.

첫번째 방법에서 중복 되는 부분은
요소의 갯수를 샐 때, 기존에 과반이 아니라고 판단한 애의 갯수를 샖 필요가 없다.
그럴려면 어떤 요소가 이미 새어졌는지를 알 필요가 있다. (O(N) 공간)
또는 중복없이  다음 원소를 구할 수 있어야 한다. (O(N) CPU 스캔.)

-----------------------------

다수 원소가 있다면, 어떤 부분 배열에서는 반드시 다수 원소여야 한다.

한 부분 배열에서 다수 원소는 둘이 있을 수 없다. 길이가 짝수일 경우는? 하나씩 겹치게 넣어서 홀수가 되게 만들면 되나? 아니면 

집합을 반으로 나눠서 각각에서 다수 원소를 구해서,
둘이 같으면 그 원소가 다수 원소이고,
둘이 다르면? 없는게 맞는건가? 둘 중 하나가 여전히 다수 원소일 수 있는거 아닌가?
어느쪽이 다수 원소인지 어떻게 알 지? 각각을 다시 새어 보면 되긴 한다.


*/
