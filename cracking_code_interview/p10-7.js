/*
2^32 = 43억 = 4GB

1GB -> 2^30 bytes

boolean으로 저장하려면 4GB가 드는데, 
이걸 비트 단위로 저장한다고 하면 8로 나눌 수 있으니 500MB에 모든 존재 여부를 저장할 수 있다.

즉 500MB의 메모리에서 i번째 비트는 i가 등장했었는지 안했었는지를 저장한다.
*/


/*
이번에는 10억개가 있고 중복은 없다. 대신 10MB 메모리만 써라.
10억 = 1GB => 125MB

10MB = 2^20 bytes

signed int 범위에 숫자 자체는 2^31 = 21억개.

2^31 bits = 2^28 bytes = 128MB 가 든다.

10억개. 남은건 10억개. 거의 절반. 절반만 들고 있고, 50% 확률로 들고 있다.

10억개를 숫자를 저장하기 위해서는 2^30 * 4byte = 4GB가 든다.

전체 결과를 인코딩해서 메모리에 들고 있기만 해도 128MB긴하다.

압축을 해야 하나?

1/12 로 압축할 수 있는 방법은?

이거 파일을 써도 되는건가?

한번에 10MB만 쓸 수 있다면...

10MB = 2^20 bytes = 8천만. 2^11 2천번 루프를 돌면서 범위를 쪼개서 계산한 다음에 파일에 쓰고, 다음 범위로 넘어가는 방법.


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
아 빠진 문자들 전체가 아니라 하나만 찾으면 되는거였구나.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

문제를 읽고 전체 정수들이라고 지래짐작 해버림.
*/
